/** THIS IS AN AUTOMATICALLY GENERATED FILE.  DO NOT MODIFY
 * BY HAND!!
 *
 * Generated by lcm-gen
 **/

#include <stdint.h>
#include <stdlib.h>
#include <lcm/lcm_coretypes.h>
#include <lcm/lcm.h>

#ifndef _kinect_status_t_h
#define _kinect_status_t_h

#ifdef __cplusplus
extern "C" {
#endif

#define KINECT_STATUS_T_WIDTH 640
#define KINECT_STATUS_T_HEIGHT 480

typedef struct _kinect_status_t kinect_status_t;
struct _kinect_status_t
{
    int64_t    utime;
    int8_t     rgb[921600];
    int8_t     depth[614400];
    double     dx;
    double     dy;
    double     dz;
};
 
kinect_status_t   *kinect_status_t_copy(const kinect_status_t *p);
void kinect_status_t_destroy(kinect_status_t *p);

typedef struct _kinect_status_t_subscription_t kinect_status_t_subscription_t;
typedef void(*kinect_status_t_handler_t)(const lcm_recv_buf_t *rbuf, 
             const char *channel, const kinect_status_t *msg, void *user);

int kinect_status_t_publish(lcm_t *lcm, const char *channel, const kinect_status_t *p);
kinect_status_t_subscription_t* kinect_status_t_subscribe(lcm_t *lcm, const char *channel, kinect_status_t_handler_t f, void *userdata);
int kinect_status_t_unsubscribe(lcm_t *lcm, kinect_status_t_subscription_t* hid);
int kinect_status_t_subscription_set_queue_capacity(kinect_status_t_subscription_t* subs, 
                              int num_messages);


int  kinect_status_t_encode(void *buf, int offset, int maxlen, const kinect_status_t *p);
int  kinect_status_t_decode(const void *buf, int offset, int maxlen, kinect_status_t *p);
int  kinect_status_t_decode_cleanup(kinect_status_t *p);
int  kinect_status_t_encoded_size(const kinect_status_t *p);

// LCM support functions. Users should not call these
int64_t __kinect_status_t_get_hash(void);
int64_t __kinect_status_t_hash_recursive(const __lcm_hash_ptr *p);
int     __kinect_status_t_encode_array(void *buf, int offset, int maxlen, const kinect_status_t *p, int elements);
int     __kinect_status_t_decode_array(const void *buf, int offset, int maxlen, kinect_status_t *p, int elements);
int     __kinect_status_t_decode_array_cleanup(kinect_status_t *p, int elements);
int     __kinect_status_t_encoded_array_size(const kinect_status_t *p, int elements);
int     __kinect_status_t_clone_array(const kinect_status_t *p, kinect_status_t *q, int elements);

#ifdef __cplusplus
}
#endif

#endif
